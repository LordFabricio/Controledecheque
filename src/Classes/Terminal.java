/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;

import com.sun.glass.events.KeyEvent;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LordFabricio
 */
public class Terminal extends javax.swing.JFrame {

    public Scanner ent;
    private double caixa;
    private List<Cheque> cheques;
    private Random r;
    private DateTimeFormatter dataformat;
    private DecimalFormat df;
    private DefaultTableModel lista;
    private ListSelectionModel selectl;
    private int n = 0;
    private int npres = 0;

    /**
     * Creates new form Terminal
     */
    public Terminal() {
        initComponents();
        cheques = new ArrayList<>();
        ent = new Scanner(System.in);
        caixa = 10000.00;
        r = new Random();
        dataformat = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        df = new DecimalFormat("####.00");
        lista = (DefaultTableModel) jTable1.getModel();
        selectl = jTable1.getSelectionModel();
        vcaixa.setText(String.valueOf(df.format(caixa)));
        do {
            autocheque();
            n++;
        } while (n < 10);
    }

    private void autocheque() {
        int ncheque;
        LocalDate datec;
        double vcheque;
        String statsc;
        ncheque = 100000 + r.nextInt(899999);
        vcheque = vrandom();
        datec = data();
        statsc = renum();
        if (statsc.equalsIgnoreCase("Compensado") && caixa > vcheque) {
            caixa = caixa - vcheque;
            vcaixa.setText(df.format(caixa));
        } else if (caixa < vcheque) {
            statsc = "SemFundo";
        }
        Object[] dados = {ncheque, df.format(vcheque), dataformat.format(datec), statsc, n};
        lista.addRow(dados);
    }

    public static LocalDate data() {
        LocalDate data;
        long minDay = LocalDate.of(2017, 1, 1).toEpochDay();
        long maxDay = LocalDate.of(2017, 12, 31).toEpochDay();
        long randomDay = ThreadLocalRandom.current().nextLong(minDay, maxDay);
        LocalDate randomDate = LocalDate.ofEpochDay(randomDay);
        data = randomDate;
        return data;
    }

    public boolean teste() {
        Date data = null;
        String dataTexto = new String(jData.getText());
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        try {
            format.setLenient(false);
            data = format.parse(dataTexto);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    public static double vrandom() {
        double vrandom;
        double inicio = 100;
        double fim = 2000;
        double random = new Random().nextDouble();
        double result = inicio + (random * (fim - inicio));
        vrandom = result;
        return vrandom;
    }

    public String renum() {
        int tenum = 1 + r.nextInt(2);
        String renum;
        switch (tenum) {
            case 1:
                renum = String.valueOf(Statusenum.Aberto);
                break;
            case 2:
                renum = String.valueOf(Statusenum.Compensado);
                break;
            case 3:
                renum = String.valueOf(Statusenum.SemFundo);
                break;
            default:
                renum = String.valueOf(Statusenum.Aberto);
                break;
        }
        return renum;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jAdicionar = new javax.swing.JButton();
        jCompensar = new javax.swing.JButton();
        jNumero = new javax.swing.JTextField();
        jValor = new javax.swing.JFormattedTextField();
        jData = new javax.swing.JFormattedTextField();
        textocaixa = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        vcaixa = new javax.swing.JLabel();
        jCheque = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle de Cheques");
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(690, 600));
        setPreferredSize(new java.awt.Dimension(690, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero.:", "Valor.:", "Data.:", "Situação.:", "COD"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoCreateRowSorter(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 610, 130));

        jAdicionar.setText("Adicionar Cheque");
        jAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAdicionarMouseClicked(evt);
            }
        });
        jAdicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAdicionarKeyPressed(evt);
            }
        });
        getContentPane().add(jAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        jCompensar.setText("Compensar");
        jCompensar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCompensarMouseClicked(evt);
            }
        });
        getContentPane().add(jCompensar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, -1, -1));

        jNumero.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jNumero.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jNumeroKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNumeroKeyTyped(evt);
            }
        });
        getContentPane().add(jNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 90, 20));

        jValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00"))));
        jValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jValorKeyTyped(evt);
            }
        });
        getContentPane().add(jValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 90, -1));

        try {
            jData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jData.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDataActionPerformed(evt);
            }
        });
        getContentPane().add(jData, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 140, -1));

        textocaixa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        textocaixa.setText("Valor do Caixa");
        textocaixa.setToolTipText("");
        getContentPane().add(textocaixa, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vcaixa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel1.add(vcaixa, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 110, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 220, 40));

        jCheque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cheque.png"))); // NOI18N
        getContentPane().add(jCheque, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 620, 320));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jAdicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAdicionarKeyPressed

    }//GEN-LAST:event_jAdicionarKeyPressed

    private void jAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAdicionarMouseClicked
        if (jNumero.getText().isEmpty() || jValor.getText().isEmpty() || jData.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha os Campos ");
        } else if (teste() == false) {
            JOptionPane.showMessageDialog(null, "Data Invalida!!!");
        } else {
            Object[] Row = new Object[5];
            Row[0] = jNumero.getText();
            Row[1] = jValor.getText();
            Row[2] = jData.getText();
            Row[3] = "Aberto";
            Row[4] = n++;
            lista.addRow(Row);
        }
    }//GEN-LAST:event_jAdicionarMouseClicked

    private void jCompensarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCompensarMouseClicked
        int selectedRow = selectl.getMinSelectionIndex();
        double vcheque;
        String stats;
        String convertv;
        if (!selectl.isSelectionEmpty()) {
            stats = lista.getValueAt(selectedRow, 3).toString();
            convertv = lista.getValueAt(selectedRow, 1).toString();
            vcheque = Double.parseDouble(convertv.replace(",", "."));
            if (stats.equalsIgnoreCase("Compensado")) {
                JOptionPane.showMessageDialog(null, "Cheque Já Compensado");
            } else if (caixa > vcheque) {
                caixa = caixa - vcheque;
                vcaixa.setText(String.valueOf(df.format(caixa)));
                lista.setValueAt("Compensado", selectedRow, 3);
            } else {
                lista.setValueAt("SemFundo", selectedRow, 3);
                JOptionPane.showMessageDialog(null, "Cheque Sem Fundo");
            }
        }
    }//GEN-LAST:event_jCompensarMouseClicked

    private void jDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDataActionPerformed

    private void jNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNumeroKeyTyped
        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACKSPACE) || vchar == KeyEvent.VK_DELETE) {
            evt.consume();
        }
    }//GEN-LAST:event_jNumeroKeyTyped

    private void jNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNumeroKeyPressed
        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
        } else {
            npres++;
            if (npres > 6) {
                JOptionPane.showMessageDialog(null, "Numero do Cheque com 6 Digitos");
                jNumero.setText("");
                npres = 0;
            }
        }
    }//GEN-LAST:event_jNumeroKeyPressed

    private void jValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jValorKeyTyped
        char vchar = evt.getKeyChar();
        if (!((Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE) || (vchar == KeyEvent.VK_COMMA))) {
            evt.consume();
        }
    }//GEN-LAST:event_jValorKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAdicionar;
    private javax.swing.JLabel jCheque;
    private javax.swing.JButton jCompensar;
    private javax.swing.JFormattedTextField jData;
    private javax.swing.JTextField jNumero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField jValor;
    private javax.swing.JLabel textocaixa;
    private javax.swing.JLabel vcaixa;
    // End of variables declaration//GEN-END:variables
}
